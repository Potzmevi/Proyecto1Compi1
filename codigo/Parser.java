
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package codigo;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;
import Forma.Error;
import Forma.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\042\000\002\002\004\000\002\002\003\000\002\002" +
    "\007\000\002\002\003\000\002\010\010\000\002\016\002" +
    "\000\002\010\005\000\002\011\004\000\002\011\003\000" +
    "\002\003\004\000\002\003\004\000\002\003\004\000\002" +
    "\003\004\000\002\017\002\000\002\003\005\000\002\005" +
    "\022\000\002\005\026\000\002\020\002\000\002\005\005" +
    "\000\002\013\026\000\002\013\032\000\002\021\002\000" +
    "\002\013\005\000\002\014\016\000\002\022\002\000\002" +
    "\014\005\000\002\015\022\000\002\023\002\000\002\015" +
    "\005\000\002\006\006\000\002\024\002\000\002\006\005" +
    "\000\002\007\006\000\002\007\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\207\000\006\003\004\006\006\001\002\000\010\002" +
    "\ufffe\003\ufffc\006\ufffc\001\002\000\004\002\000\001\002" +
    "\000\004\012\011\001\002\000\004\002\010\001\002\000" +
    "\004\002\001\001\002\000\006\013\012\023\013\001\002" +
    "\000\004\010\042\001\002\000\004\007\014\001\002\000" +
    "\006\003\016\006\020\001\002\000\004\002\uffff\001\002" +
    "\000\010\002\uffe0\003\ufffc\006\ufffc\001\002\000\006\003" +
    "\016\006\020\001\002\000\004\012\022\001\002\000\004" +
    "\002\ufff9\001\002\000\006\013\012\022\023\001\002\000" +
    "\004\007\024\001\002\000\004\002\uffe1\001\002\000\004" +
    "\002\ufffa\001\002\000\006\003\027\006\030\001\002\000" +
    "\006\003\uffe3\006\uffe3\001\002\000\004\014\032\001\002" +
    "\000\010\002\ufffb\003\ufffb\006\ufffb\001\002\000\004\012" +
    "\033\001\002\000\004\007\034\001\002\000\010\002\uffe4" +
    "\003\uffe4\006\uffe4\001\002\000\006\003\036\006\040\001" +
    "\002\000\006\003\ufffc\006\ufffc\001\002\000\010\002\uffe2" +
    "\003\uffe2\006\uffe2\001\002\000\004\012\041\001\002\000" +
    "\004\013\012\001\002\000\014\003\046\024\047\025\043" +
    "\026\044\035\050\001\002\000\006\003\153\007\155\001" +
    "\002\000\006\003\134\007\135\001\002\000\006\003\027" +
    "\006\030\001\002\000\006\003\ufff4\007\ufff4\001\002\000" +
    "\006\003\075\007\077\001\002\000\006\003\051\007\052" +
    "\001\002\000\006\003\uffe6\006\uffe6\001\002\000\004\031" +
    "\054\001\002\000\006\003\ufff5\006\ufff5\001\002\000\004" +
    "\105\055\001\002\000\004\010\056\001\002\000\004\033" +
    "\057\001\002\000\004\031\060\001\002\000\004\045\061" +
    "\001\002\000\004\010\062\001\002\000\004\005\063\001" +
    "\002\000\004\011\064\001\002\000\004\046\065\001\002" +
    "\000\004\010\066\001\002\000\004\005\067\001\002\000" +
    "\004\032\070\001\002\000\004\034\071\001\002\000\004" +
    "\032\072\001\002\000\006\003\uffe7\006\uffe7\001\002\000" +
    "\006\003\027\006\030\001\002\000\006\003\uffe5\006\uffe5" +
    "\001\002\000\006\003\ufff0\006\ufff0\001\002\000\006\003" +
    "\ufff8\006\ufff8\001\002\000\004\031\100\001\002\000\004" +
    "\105\101\001\002\000\004\010\102\001\002\000\004\033" +
    "\103\001\002\000\004\031\104\001\002\000\004\045\105" +
    "\001\002\000\004\010\106\001\002\000\004\005\107\001" +
    "\002\000\004\011\110\001\002\000\004\046\111\001\002" +
    "\000\004\010\112\001\002\000\004\005\113\001\002\000" +
    "\006\011\115\032\114\001\002\000\004\034\124\001\002" +
    "\000\004\067\116\001\002\000\004\010\117\001\002\000" +
    "\004\103\120\001\002\000\004\032\121\001\002\000\004" +
    "\034\122\001\002\000\004\032\123\001\002\000\006\003" +
    "\ufff1\006\ufff1\001\002\000\004\032\125\001\002\000\006" +
    "\003\ufff2\006\ufff2\001\002\000\006\003\027\006\030\001" +
    "\002\000\006\003\uffef\006\uffef\001\002\000\006\003\075" +
    "\007\077\001\002\000\006\003\ufff3\006\ufff3\001\002\000" +
    "\010\002\ufffd\003\ufffd\006\ufffd\001\002\000\006\003\ufff6" +
    "\006\ufff6\001\002\000\006\003\uffe9\006\uffe9\001\002\000" +
    "\004\031\136\001\002\000\004\105\137\001\002\000\004" +
    "\010\140\001\002\000\004\033\141\001\002\000\004\031" +
    "\142\001\002\000\004\045\143\001\002\000\004\010\144" +
    "\001\002\000\004\005\145\001\002\000\004\032\146\001" +
    "\002\000\004\034\147\001\002\000\004\032\150\001\002" +
    "\000\006\003\uffea\006\uffea\001\002\000\006\003\027\006" +
    "\030\001\002\000\006\003\uffe8\006\uffe8\001\002\000\006" +
    "\003\uffec\006\uffec\001\002\000\006\003\ufff7\006\ufff7\001" +
    "\002\000\004\031\156\001\002\000\004\105\157\001\002" +
    "\000\004\010\160\001\002\000\004\033\161\001\002\000" +
    "\004\031\162\001\002\000\004\047\163\001\002\000\004" +
    "\010\164\001\002\000\004\005\165\001\002\000\004\011" +
    "\166\001\002\000\004\050\167\001\002\000\004\010\170" +
    "\001\002\000\004\005\171\001\002\000\004\011\172\001" +
    "\002\000\004\051\173\001\002\000\004\010\174\001\002" +
    "\000\004\005\175\001\002\000\006\011\177\032\176\001" +
    "\002\000\004\034\206\001\002\000\004\067\200\001\002" +
    "\000\004\010\201\001\002\000\004\103\202\001\002\000" +
    "\004\032\203\001\002\000\004\034\204\001\002\000\004" +
    "\032\205\001\002\000\006\003\uffed\006\uffed\001\002\000" +
    "\004\032\207\001\002\000\006\003\uffee\006\uffee\001\002" +
    "\000\006\003\027\006\030\001\002\000\006\003\uffeb\006" +
    "\uffeb\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\207\000\006\002\006\010\004\001\001\000\004\016" +
    "\025\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\007\020\010\016\011\014" +
    "\001\001\000\002\001\001\000\004\016\025\001\001\000" +
    "\010\007\020\010\016\011\024\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\006\030\001\001" +
    "\000\004\024\034\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\036\001\001\000\004\016\025\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\044\001\001\000\004\013\153\001\001\000\004\014" +
    "\132\001\001\000\004\006\131\001\001\000\004\017\127" +
    "\001\001\000\004\005\075\001\001\000\004\015\052\001" +
    "\001\000\004\023\072\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\006" +
    "\073\001\001\000\002\001\001\000\004\020\125\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\006\126\001\001\000\002" +
    "\001\001\000\004\005\130\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\022\150\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\006\151" +
    "\001\001\000\002\001\001\000\004\021\207\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\006\210\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private ArrayList<Formas> listaFormas= new ArrayList<Formas>();
    private ArrayList<Error> errorsList= new ArrayList<Error>();
    private ArrayList<Operador> listaOperadores= new ArrayList<Operador>();
    public Parser(LexerCup lex) {
        super(lex);
        this.errorsList = new ArrayList();
    }
    @Override
        public void syntax_error(Symbol st) {
            System.out.println(st.value);
            Token token = (Token) st.value;
            report_error("Error Sintactico con el  Token:"+ token.getLexeme()+" este no pertenece a la estructura - linea: "+token.getLine()+" - columna: "+token.getColumn() +" Se esperaba: "+ "\n",null);       
            Error error = new Error(token.getLexeme(),token.getLine(),token.getColumn(),0);
            errorsList.add(error);
        }
    

        //retorna list de errores sintacticos
        public ArrayList<Error> getErrorsList(){
            return errorsList
            ;
        }

    


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parser$actions {
  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action_part00000000(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= SOLICITUD 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= MenorQue Exclamacion IniciarSolicitudes MayorQue INISOLICITUDES 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		
            List expected = expected_token_ids();
            System.out.println("Error en INICIO "+symbl_name_from_id((int) expected.get(0)) +String.valueOf(expected.size()));
        
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // SOLICITUD ::= MenorQue Exclamacion IniciarSolicitud DosPuntos TIPOSOLICITUD FINALSOLICITUD 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("SOLICITUD",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // NT$0 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;

            List expected = expected_token_ids();
            System.out.println("Error en SOLICITUD "+symbl_name_from_id((int) expected.get(0)) +String.valueOf(expected.size()));
        
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("NT$0",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // SOLICITUD ::= error NT$0 FINALSOLICITUD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("SOLICITUD",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INISOLICITUDES ::= SOLICITUD INISOLICITUDES 
            {
              Object RESULT =null;
		System.out.println("Viene una solicitud");
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INISOLICITUDES",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // INISOLICITUDES ::= FINALSOLICITUDES 
            {
              Object RESULT =null;
		System.out.println("fin de solicitudes");
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("INISOLICITUDES",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // TIPOSOLICITUD ::= CrearUsuario CREACIONUSUARIO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("TIPOSOLICITUD",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // TIPOSOLICITUD ::= ModificarUsuario MODIFICARUSUARIO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("TIPOSOLICITUD",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // TIPOSOLICITUD ::= EliminarUsuario ELIMINARUSUARIO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("TIPOSOLICITUD",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // TIPOSOLICITUD ::= LoginUsuario LOGINUSUARIO 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("TIPOSOLICITUD",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // NT$1 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
 
            List expected = expected_token_ids();
            System.out.println("Error en TIPOSOLICITUD "+symbl_name_from_id((int) expected.get(0)) +String.valueOf(expected.size()));
             
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("NT$1",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // TIPOSOLICITUD ::= error NT$1 CREACIONUSUARIO 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("TIPOSOLICITUD",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CREACIONUSUARIO ::= MayorQue Llave_a CredencialesUsuario DosPuntos Corchete_a Llave_a Usuario DosPuntos StringSin Coma Password DosPuntos StringSin Llave_c Corchete_c Llave_c 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREACIONUSUARIO",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-15)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CREACIONUSUARIO ::= MayorQue Llave_a CredencialesUsuario DosPuntos Corchete_a Llave_a Usuario DosPuntos StringSin Coma Password DosPuntos StringSin Coma FechaCreacion DosPuntos Fecha Llave_c Corchete_c Llave_c 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREACIONUSUARIO",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-19)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$2 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;

            List expected = expected_token_ids();
            System.out.println("Error en CREARUSUARIO "+symbl_name_from_id((int) expected.get(1)) +String.valueOf(expected.size()));
        
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("NT$2",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CREACIONUSUARIO ::= error NT$2 FINALSOLICITUD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("CREACIONUSUARIO",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // MODIFICARUSUARIO ::= MayorQue Llave_a CredencialesUsuario DosPuntos Corchete_a Llave_a UsuarioAntiguo DosPuntos StringSin Coma UsuarioNuevo DosPuntos StringSin Coma NuevoPassword DosPuntos StringSin Llave_c Corchete_c Llave_c 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("MODIFICARUSUARIO",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-19)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // MODIFICARUSUARIO ::= MayorQue Llave_a CredencialesUsuario DosPuntos Corchete_a Llave_a UsuarioAntiguo DosPuntos StringSin Coma UsuarioNuevo DosPuntos StringSin Coma NuevoPassword DosPuntos StringSin Coma FechaCreacion DosPuntos Fecha Llave_c Corchete_c Llave_c 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("MODIFICARUSUARIO",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-23)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NT$3 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;

            List expected = expected_token_ids();
            System.out.println("Error en MODIFICARUSUARIO "+symbl_name_from_id((int) expected.get(0)) +String.valueOf(expected.size()));
        
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("NT$3",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // MODIFICARUSUARIO ::= error NT$3 FINALSOLICITUD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("MODIFICARUSUARIO",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ELIMINARUSUARIO ::= MayorQue Llave_a CredencialesUsuario DosPuntos Corchete_a Llave_a Usuario DosPuntos StringSin Llave_c Corchete_c Llave_c 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ELIMINARUSUARIO",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-11)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // NT$4 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;

            List expected = expected_token_ids();
            System.out.println("Error en ELIMINARUSUARIO "+symbl_name_from_id((int) expected.get(0)) +String.valueOf(expected.size()));
        
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("NT$4",16, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ELIMINARUSUARIO ::= error NT$4 FINALSOLICITUD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ELIMINARUSUARIO",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // LOGINUSUARIO ::= MayorQue Llave_a CredencialesUsuario DosPuntos Corchete_a Llave_a Usuario DosPuntos StringSin Coma Password DosPuntos StringSin Llave_c Corchete_c Llave_c 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("LOGINUSUARIO",11, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-15)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$5 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;

            List expected = expected_token_ids();
            System.out.println("Error en LOGINUSUARIO "+symbl_name_from_id((int) expected.get(0)) +String.valueOf(expected.size()));
        
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("NT$5",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // LOGINUSUARIO ::= error NT$5 FINALSOLICITUD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("LOGINUSUARIO",11, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // FINALSOLICITUD ::= MenorQue FinSolicitud Exclamacion MayorQue 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("FINALSOLICITUD",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // NT$6 ::= 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;

            List expected = expected_token_ids();
            System.out.println("Error en FINALSOLICITUD "+symbl_name_from_id((int) expected.get(0)) +String.valueOf(expected.size()));
        
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("NT$6",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // FINALSOLICITUD ::= error NT$6 SOLICITUD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("FINALSOLICITUD",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // FINALSOLICITUDES ::= MenorQue Exclamacion FinSolicitudes MayorQue 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("FINALSOLICITUDES",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // FINALSOLICITUDES ::= error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		
            List expected = expected_token_ids();
            System.out.println("Error en FINALSOLICITUDES "+symbl_name_from_id((int) expected.get(0)) +String.valueOf(expected.size()));
        
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("FINALSOLICITUDES",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
              return CUP$Parser$do_action_part00000000(
                               CUP$Parser$act_num,
                               CUP$Parser$parser,
                               CUP$Parser$stack,
                               CUP$Parser$top);
    }
}

}
